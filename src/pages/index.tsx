import {
  SignIn,
  SignInButton,
  SignOutButton,
  useClerk,
  useUser,
  SignedIn,
  SignedOut,
} from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime);

const CreatePost = () => {
  const { user } = useUser();
  console.log(user);
  if (!user) return null;

  return (
    <div className="flex w-full gap-14">
      <input
        type="text"
        className="grow  border-b-2 border-zinc-800 bg-transparent p-2 focus:outline-none"
        placeholder="Type some emojis"
      />
      <Image
        src={user.profileImageUrl}
        alt="User profile picture"
        className="h-12 w-12 rounded-full"
        width={48}
        height={48}
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex flex-row gap-5">
      <Image
        src={author.profileImageUrl}
        alt="user profile picture"
        className="h-9 w-9 rounded-full"
        width={36}
        height={36}
      />
      <div key={post.id} className="flex flex-col">
        <div className="flex flex-row gap-1">
          <span>{author?.username ? author.username : author.fullname}</span>
          <span className="font-thin text-gray-900">
            {`Â· ${dayjs(post.createdAt).fromNow()}`}
          </span>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();
  if (isLoading) return <div>Loading posts...</div>;
  if (!data) return <div>Something went wrong ðŸ˜’</div>;
  return (
    <>
      <Head>
        <title>CheepðŸ¦œ</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <SignedIn>
        <header className="p-2">
          <div className="container mx-auto flex flex-col items-center justify-between gap-14 py-5 md:flex-row">
            <span className="whitespace-nowrap text-xl">CheepðŸ¦œ</span>

            <CreatePost></CreatePost>
            {/* <button
              onClick={() => signOut()}
              className=" inline-flex items-center rounded border-0 bg-rose-500 px-3 py-1 text-base text-white shadow hover:bg-rose-700 focus:outline-none md:mt-0"
            >
              Sign out
              <svg
                fill="none"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                className="ml-1 h-4 w-4"
                viewBox="0 0 24 24"
              >
                <path d="M5 12h14M12 5l7 7-7 7"></path>
              </svg>
            </button> */}
          </div>
        </header>
      </SignedIn>
      <main className="">
        <div className="h-full w-full">
          <SignedOut>
            <div>
              {" "}
              <SignInButton />
            </div>
          </SignedOut>
          <div className="flex flex-col gap-8 overflow-y-scroll p-4">
            {[...data].map((postWithUser) => (
              <PostView {...postWithUser} key={postWithUser.post.id}></PostView>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
